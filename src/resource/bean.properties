# controller
cmm1000Controller= cmm.cmm1000.cmm1000.web.Cmm1000Controller
usr1000Controller= usr.usr1000.usr1000.web.Usr1000Controller
lck1000Controller= lck.lck1000.lck1000.web.Lck1000Controller
sta1000Controller= sta.sta1000.sta1000.web.Sta1000Controller
cmm2000Controller= cmm.cmm2000.cmm2000.web.Cmm2000Controller

# service
usr1000Service= usr.usr1000.usr1000.service.impl.Usr1000ServiceImpl
lck1000Service= lck.lck1000.lck1000.service.impl.Lck1000ServiceImpl
sta1000Service= sta.sta1000.sta1000.service.impl.Sta1000ServiceImpl
# DAO
usr1000DAO = usr.usr1000.usr1000.service.Usr1000DAO
lck1000DAO = lck.lck1000.lck1000.service.Lck1000DAO
sta1000DAO = sta.sta1000.sta1000.service.Sta1000DAO

#참고
	#client측에서 넘어온 url(RequestMapping의 value 값이자 controller-method의 pk 값)을 가지고 정보를 조회
	#현재 multiValue에 단순히 Controller명, method명만 있지만 Get,Post 등 추가 메타 정보가 존재할 수 있음
	#따로 annotation을 활용하여서 startWeb 초기화 할 경우 동적으로 Map을 만드는 것이 Spring 동작과 유사
	#이 단계를 properties에 key,value를 담는 것으로 대체 - Controller에서도 어노테이션 붙이고 RequestMapping value를 수동으로 넣는 것과 유사하다고 합의 
	#TODO 가능하면 Controller쪽에 정보를 넣고 동적으로 Map에 담는 방식 구현
		#MappingRegistry클래스 생성 및 HandlerMethod 객체 반환. 해당 객체는 class 정보, method 정보를 가짐
#MappingRegistry: Controller의 requestMapping 정보를 key-MultiValue형식으로 담은 클래스
cmm/cmm1000/cmm1000/selectCmm1000List=cmm.cmm1000.cmm1000.web.Cmm1000Controller-selectCmm1000List

errorPage=cmm.cmm2000.cmm2000.web.Cmm2000Controller-selectCmm2000

usr/usr1000/usr1000/selectUsr1000List=usr.usr1000.usr1000.web.Usr1000Controller-selectUsr1000List
usr/usr1000/usr1000/selectUsr1000=usr.usr1000.usr1000.web.Usr1000Controller-selectUsr1000
usr/usr1000/usr1000/createUsr1000=usr.usr1000.usr1000.web.Usr1000Controller-createUsr1000
usr/usr1000/usr1000/updateUsr1000=usr.usr1000.usr1000.web.Usr1000Controller-updateUsr1000
usr/usr1000/usr1000/updateUsr1000Form=usr.usr1000.usr1000.web.Usr1000Controller-updateUsr1000Form
usr/usr1000/usr1000/deleteUsr1000=usr.usr1000.usr1000.web.Usr1000Controller-deleteUsr1000
usr/usr1000/usr1000/deleteUsr1000Form=usr.usr1000.usr1000.web.Usr1000Controller-deleteUsr1000Form

lck/lck1000/lck1000/selectLck1000List=lck.lck1000.lck1000.web.Lck1000Controller-selectLck1000List
lck/lck1000/lck1000/createLck1000=lck.lck1000.lck1000.web.Lck1000Controller-createLck1000
lck/lck1000/lck1000/selectLck1000=lck.lck1000.lck1000.web.Lck1000Controller-selectLck1000
lck/lck1000/lck1000/updateLck1000=lck.lck1000.lck1000.web.Lck1000Controller-updateLck1000
lck/lck1000/lck1000/deleteLck1000=lck.lck1000.lck1000.web.Lck1000Controller-deleteLck1000
lck/lck1000/lck1000/deleteLck1000Form=lck.lck1000.lck1000.web.Lck1000Controller-deleteLck1000Form

sta/sta1000/sta1000/selectSta1000=sta.sta1000.sta1000.web.Sta1000Controller-selectSta1000